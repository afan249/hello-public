package com.friend.spider.lnn.CoreJava.chapter05;import java.io.BufferedReader;import java.io.FileReader;import java.io.InputStream;import java.util.Properties;import java.util.ResourceBundle;/** * java读取properties配置文件的几种方式 */public class ConfigTest {    public static void main(String[] args) {        configT3();    }    /**     * 1、基于ClassLoad读取配置文件     * 注意：该方式只能读取类路径下的配置文件，有局限但是如果配置文件在类路径下比较方便。     */    public static void configT1(){        Properties properties = new Properties();        try {            // 使用ClassLoader加载properties配置文件生成对应的输入流            InputStream in = ConfigTest.class.getClassLoader().getResourceAsStream("sjk.properties");            // 使用properties对象加载输入流            properties.load(in);        } catch (Exception e) {            System.out.println("异常");            e.printStackTrace();        }        System.out.println("1");        //获取key对应的value值        properties.getProperty("password");    }    /**     * 2、基于 InputStream 读取配置文件     * 注意：该方式的优点在于可以读取任意路径下的配置文件     */    public static void configT2(){        try {            Properties properties = new Properties();            BufferedReader bufferedReader = new BufferedReader(new FileReader("E:/config.properties"));            properties.load(bufferedReader);            properties.getProperty("name");        } catch (Exception e){            e.printStackTrace();        }    }    /**     * 3、通过 java.util.ResourceBundle 类来读取，这种方式比使用 Properties 要方便一些     * 1>通过 ResourceBundle.getBundle() 静态方法来获取（ResourceBundle是一个抽象类），这种方式来获取properties属性文件不需要加.properties后缀名，只需要文件名即可     *     */    public static void configT3(){        Properties properties = new Properties();        properties.getProperty("name");        //config为属性文件名，放在包com.test.config下，如果是放在src下，直接用config即可        ResourceBundle resource = ResourceBundle.getBundle("sjk.properties");        String key = resource.getString("name");    }}