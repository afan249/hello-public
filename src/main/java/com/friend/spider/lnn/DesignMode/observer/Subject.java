package com.friend.spider.lnn.DesignMode.observer;import java.util.ArrayList;import java.util.List;/** * 目标对象，它知道观察它的观察者，并提供注册（添加）和删除观察者的接口 * @author lnn */public class Subject {    //用来保存注册的观察者对象    private List<Observer> observers = new ArrayList<>();    //attach detach notifyObservers    //将观察者添加到观察者集合中    public void attach(Observer observer){        observers.add(observer);    }    //删除集合中的指定观察者    public void detach(Observer observer){        observers.remove(observer);    }    //通知已注册的观察者列表中所有观察者 只有子类可以调用 即向所有注册的观察者发送消息    protected void notifyObservers(){        //遍历出来        for (Observer observer: observers){            observer.update(this);        }    }}